<?xml version="1.0"?>
<robot name="four_wheel_car" xmlns:xacro="http://www.ros.org/wiki/xacro">
<material name="Red">
  <color rgba="1 0 0 1"/>
</material>
<material name="Blue">
  <color rgba="0 0 1 1"/>
</material>
<material name="Green">
  <color rgba="0 1 0 1"/>
</material>

  <!-- Define properties for reusability -->
  <xacro:property name="wheel_radius" value="0.2"/>
  <xacro:property name="wheel_width" value="0.1"/>
  <xacro:property name="body_length" value="1.5"/>
  <xacro:property name="body_width" value="1.0"/>
  <xacro:property name="body_height" value="0.3"/>
  <xacro:property name="wheel_offset_x" value="0.7"/>
  <xacro:property name="wheel_offset_y" value="0.55"/>
  <xacro:property name="wheel_z" value="0.1"/>
  
  <!-- Base Link -->
  <link name="base_link">
    <inertial>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <mass value="5.0"/>
      <inertia ixx="0.1" ixy="0.0" ixz="0.0"
               iyy="0.1" iyz="0.0"
               izz="0.1"/>
    </inertial>
    <visual>
      <origin xyz="0 0 0.25" rpy="0 0 0"/>
      <geometry>
        <box size="${body_length} ${body_width} ${body_height}"/>
      </geometry>
    </visual>
    <collision>
      <origin xyz="0 0 0.15" rpy="0 0 0"/>
      <geometry>
        <box size="${body_length} ${body_width} ${body_height}"/>
      </geometry>
    </collision>
  </link>

  <!-- Define a wheel macro with orientation -->
  <xacro:macro name="wheel" params="name x y">
    <joint name="${name}_joint" type="continuous">
      <parent link="base_link"/>
      <child link="${name}_link"/>
      <origin xyz="${x} ${y} ${wheel_z}" rpy="0 0 0"/>
      <axis xyz="0 1 0"/>
    </joint>
    <link name="${name}_link">
      <inertial>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <mass value="1"/>
        <inertia ixx="10" ixy="0.0" ixz="0.0"
                 iyy="0.01" iyz="0.0"
                 izz="0.0"/>
      </inertial>
      <visual>
        <origin xyz="0 0 0" rpy="1.5708 0 0"/>
        <geometry>
          <cylinder length="${wheel_width}" radius="${wheel_radius}"/>
        </geometry>
        <material name="Red"/>
      </visual>
      <collision>
        <origin xyz="0 0 0.0" rpy="1.5708 0 0"/>
        <geometry>
          <cylinder length="${wheel_width}" radius="${wheel_radius}"/>
        </geometry>
        <material name="Green"/>
      </collision>
    </link>
  </xacro:macro>

  <!-- Create 4 wheels -->
  <xacro:wheel name="front_left_wheel" x="${wheel_offset_x}" y="${wheel_offset_y}"/>
  <xacro:wheel name="front_right_wheel" x="${wheel_offset_x}" y="-${wheel_offset_y}"/>
  <xacro:wheel name="rear_left_wheel" x="-${wheel_offset_x}" y="${wheel_offset_y}"/>
  <xacro:wheel name="rear_right_wheel" x="-${wheel_offset_x}" y="-${wheel_offset_y}"/>

  <!-- Transmission for ROS control -->
  <xacro:macro name="wheel_transmission" params="name">
    <transmission name="${name}_transmission">
      <type>transmission_interface/SimpleTransmission</type>
      <joint name="${name}_joint">
        <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
      </joint>
      <actuator name="${name}_motor">
        <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
      </actuator>
    </transmission>
  </xacro:macro>

  <!-- Add Transmissions -->
  <xacro:wheel_transmission name="front_left_wheel"/>
  <xacro:wheel_transmission name="front_right_wheel"/>
  <xacro:wheel_transmission name="rear_left_wheel"/>
  <xacro:wheel_transmission name="rear_right_wheel"/>

<!-- Add Mono Camera -->
<!-- Define a link for the camera -->
<link name="camera_link">
  <inertial>
    <origin xyz="0 0 0" rpy="0 0 0"/>
    <mass value="0.1"/>
    <inertia ixx="0.001" ixy="0.0" ixz="0.0"
             iyy="0.001" iyz="0.0"
             izz="0.001"/>
  </inertial>
  <visual>
    <origin xyz="0 0 0" rpy="0 0 0"/>
    <geometry>
      <box size="0.05 0.05 0.05"/>
    </geometry>
    <material name="Blue"/>
  </visual>
  <collision>
    <origin xyz="0 0 0" rpy="0 0 0"/>
    <geometry>
      <box size="0.05 0.05 0.05"/>
    </geometry>
  </collision>
</link>

<!-- Attach the camera to the robot using a fixed joint -->
<joint name="camera_joint" type="fixed">
  <parent link="base_link"/>
  <child link="camera_link"/>
  <!-- Adjust this origin to position the camera as desired on the car -->
  <origin xyz="0.5 0 0.5" rpy="0 0 0"/>
</joint>

<!-- Gazebo sensor plugin for the mono camera -->
<gazebo reference="camera_link">
  <sensor type="camera" name="mono_camera">
    <update_rate>30</update_rate>
    <always_on>true</always_on>
    <visualize>true</visualize>
    <camera>
      <!-- Set the horizontal FOV (in radians). For a 90Â° FOV, use about 1.5708 -->
      <horizontal_fov>1.5708</horizontal_fov>
      <image>
        <width>640</width>
        <height>480</height>
        <!-- Use L8 for an 8-bit grayscale image -->
        <format>L8</format>
      </image>
      <clip>
        <near>0.1</near>
        <far>100</far>
      </clip>
    </camera>
    <plugin name="gazebo_ros_camera" filename="libgazebo_ros_camera.so">
      <robotNamespace>/</robotNamespace>
      <cameraName>mono_camera</cameraName>
      <imageTopicName>mono_camera/image_raw</imageTopicName>
      <cameraInfoTopicName>mono_camera/camera_info</cameraInfoTopicName>
      <frameName>camera_link</frameName>
      <updateRate>30.0</updateRate>
    </plugin>
  </sensor>
</gazebo>


  <!-- Gazebo Plugin for ROS control -->
  <gazebo>
    <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so"/>
  </gazebo>
  
</robot>

